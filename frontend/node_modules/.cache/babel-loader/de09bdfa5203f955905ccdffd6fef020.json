{"ast":null,"code":"import { QUESTION_LIST_REQUEST, QUESTION_LIST_SUCCESS, QUESTION_LIST_FAIL, QUESTION_CREATE_REQUEST, QUESTION_CREATE_SUCCESS, QUESTION_CREATE_FAIL } from \"../constants/QuestionConstants\";\nimport axios from \"axios\";\n{\n  /*redux-thunk*/\n}\n{\n  /*ACTIONS*/\n}\nexport const listQuestion = () => async dispatch => {\n  try {\n    dispatch({\n      type: QUESTION_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/questions\");\n    dispatch({\n      type: QUESTION_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: QUESTION_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createQuestion = question => async dispatch => {\n  try {\n    dispatch({\n      type: QUESTION_CREATE_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(\"/api/questions\", question);\n    dispatch({\n      type: QUESTION_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: QUESTION_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["D:/BaiTapTruong/DoAnN/ThiTNOnline/frontend/src/actions/QuestionActions.js"],"names":["QUESTION_LIST_REQUEST","QUESTION_LIST_SUCCESS","QUESTION_LIST_FAIL","QUESTION_CREATE_REQUEST","QUESTION_CREATE_SUCCESS","QUESTION_CREATE_FAIL","axios","listQuestion","dispatch","type","data","get","payload","error","response","message","createQuestion","question","post"],"mappings":"AAAA,SACEA,qBADF,EAEEC,qBAFF,EAGEC,kBAHF,EAIEC,uBAJF,EAKEC,uBALF,EAMEC,oBANF,QAOO,gCAPP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;AAAC;AAAgB;AACjB;AAAC;AAAY;AACb,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACpD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAET;AAAP,KAAD,CAAR;AACA,UAAM;AAACU,MAAAA;AAAD,QAAS,MAAMJ,KAAK,CAACK,GAAN,CAAU,gBAAV,CAArB;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAER,qBAAP;AAA8BW,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AACD,GAJD,CAIE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,kBADC;AAEPU,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAdM;AAgBP,OAAO,MAAMC,cAAc,GACzBC,QAD4B,IAEzB,MAAOT,QAAP,IAAoB;AACvB,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN;AAAP,KAAD,CAAR;AACA,UAAM;AAACO,MAAAA;AAAD,QAAS,MAAMJ,KAAK,CAACY,IAAN,CAAW,gBAAX,EAA6BD,QAA7B,CAArB;AACAT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,uBAAP;AAAgCQ,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAR;AACD,GAJD,CAIE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,kBADC;AAEPU,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAhBM","sourcesContent":["import {\r\n  QUESTION_LIST_REQUEST,\r\n  QUESTION_LIST_SUCCESS,\r\n  QUESTION_LIST_FAIL,\r\n  QUESTION_CREATE_REQUEST,\r\n  QUESTION_CREATE_SUCCESS,\r\n  QUESTION_CREATE_FAIL,\r\n} from \"../constants/QuestionConstants\";\r\nimport axios from \"axios\";\r\n\r\n{/*redux-thunk*/}\r\n{/*ACTIONS*/}\r\nexport const listQuestion = () => async (dispatch) => {\r\n  try {\r\n    dispatch({type: QUESTION_LIST_REQUEST});\r\n    const {data} = await axios.get(\"/api/questions\");\r\n    dispatch({type: QUESTION_LIST_SUCCESS, payload: data});\r\n  } catch (error) {\r\n    dispatch({\r\n      type: QUESTION_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createQuestion = (\r\n  question\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({type: QUESTION_CREATE_REQUEST});\r\n    const {data} = await axios.post(\"/api/questions\", question);\r\n    dispatch({type: QUESTION_CREATE_SUCCESS, payload: data});\r\n  } catch (error) {\r\n    dispatch({\r\n      type: QUESTION_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}