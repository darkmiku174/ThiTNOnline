{"ast":null,"code":"import { QUESTION_CREATE_REQUEST, QUESTION_CREATE_SUCCESS, QUESTION_CREATE_FAIL, QUESTION_CREATE_RESET, QUESTION_LIST_REQUEST, QUESTION_LIST_SUCCESS, QUESTION_LIST_FAIL, QUESTION_REQUEST, QUESTION_SUCCESS, QUESTION_FAIL } from \"../constants/QuestionConstants\";\nexport const questionListReducer = (state = {\n  questions: []\n}, action) => {\n  switch (action.type) {\n    case QUESTION_LIST_REQUEST:\n      return {\n        loading: true,\n        questions: []\n      };\n\n    case QUESTION_LIST_SUCCESS:\n      return {\n        loading: false,\n        questions: action.payload\n      };\n\n    case QUESTION_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const questionReducer = (state = {}, action) => {\n  switch (action.type) {\n    case QUESTION_REQUEST:\n      return {\n        loading: true,\n        question: {}\n      };\n\n    case QUESTION_SUCCESS:\n      return {\n        loading: false,\n        question: action.payload\n      };\n\n    case QUESTION_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const questionCreateReducer = (state = {\n  questionCreated: {}\n}, action) => {\n  switch (action.type) {\n    case QUESTION_CREATE_REQUEST:\n      return {\n        loading: true,\n        questionCreated: {}\n      };\n\n    case QUESTION_CREATE_SUCCESS:\n      return {\n        loading: false,\n        questionCreated: action.payload\n      };\n\n    case QUESTION_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case QUESTION_CREATE_RESET:\n      return {\n        questionCreated: {}\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/BaiTapTruong/DoAnN/ThiTNOnline/frontend/src/reducers/QuestionReducers.js"],"names":["QUESTION_CREATE_REQUEST","QUESTION_CREATE_SUCCESS","QUESTION_CREATE_FAIL","QUESTION_CREATE_RESET","QUESTION_LIST_REQUEST","QUESTION_LIST_SUCCESS","QUESTION_LIST_FAIL","QUESTION_REQUEST","QUESTION_SUCCESS","QUESTION_FAIL","questionListReducer","state","questions","action","type","loading","payload","error","questionReducer","question","questionCreateReducer","questionCreated"],"mappings":"AAAA,SACEA,uBADF,EAEEC,uBAFF,EAGEC,oBAHF,EAIEC,qBAJF,EAKEC,qBALF,EAMEC,qBANF,EAOEC,kBAPF,EAQEC,gBARF,EASEC,gBATF,EAUEC,aAVF,QAWO,gCAXP;AAaA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,SAAS,EAAE;AAAZ,CAAT,EAA0BC,MAA1B,KAAqC;AACtE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,qBAAL;AACE,aAAO;AAACW,QAAAA,OAAO,EAAE,IAAV;AAAgBH,QAAAA,SAAS,EAAE;AAA3B,OAAP;;AACF,SAAKP,qBAAL;AACE,aAAO;AAACU,QAAAA,OAAO,EAAE,KAAV;AAAiBH,QAAAA,SAAS,EAAEC,MAAM,CAACG;AAAnC,OAAP;;AACF,SAAKV,kBAAL;AACE,aAAO;AAACS,QAAAA,OAAO,EAAE,KAAV;AAAiBE,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AAA/B,OAAP;;AACF;AACE,aAAOL,KAAP;AARJ;AAUD,CAXM;AAaP,OAAO,MAAMO,eAAe,GAAG,CAACP,KAAK,GAAG,EAAT,EAAaE,MAAb,KAAwB;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,gBAAL;AACE,aAAO;AAACQ,QAAAA,OAAO,EAAE,IAAV;AAAgBI,QAAAA,QAAQ,EAAE;AAA1B,OAAP;;AACF,SAAKX,gBAAL;AACE,aAAO;AAACO,QAAAA,OAAO,EAAE,KAAV;AAAiBI,QAAAA,QAAQ,EAAEN,MAAM,CAACG;AAAlC,OAAP;;AACF,SAAKP,aAAL;AACE,aAAO;AAACM,QAAAA,OAAO,EAAE,KAAV;AAAiBE,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AAA/B,OAAP;;AACF;AACE,aAAOL,KAAP;AARJ;AAUD,CAXM;AAaP,OAAO,MAAMS,qBAAqB,GAAG,CACnCT,KAAK,GAAG;AAACU,EAAAA,eAAe,EAAE;AAAlB,CAD2B,EAEnCR,MAFmC,KAGhC;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,uBAAL;AACE,aAAO;AAACe,QAAAA,OAAO,EAAE,IAAV;AAAgBM,QAAAA,eAAe,EAAE;AAAjC,OAAP;;AACF,SAAKpB,uBAAL;AACE,aAAO;AAACc,QAAAA,OAAO,EAAE,KAAV;AAAiBM,QAAAA,eAAe,EAAER,MAAM,CAACG;AAAzC,OAAP;;AACF,SAAKd,oBAAL;AACE,aAAO;AAACa,QAAAA,OAAO,EAAE,KAAV;AAAiBE,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AAA/B,OAAP;;AACF,SAAKb,qBAAL;AACE,aAAO;AAACkB,QAAAA,eAAe,EAAE;AAAlB,OAAP;;AACF;AACE,aAAOV,KAAP;AAVJ;AAYD,CAhBM","sourcesContent":["import {\r\n  QUESTION_CREATE_REQUEST,\r\n  QUESTION_CREATE_SUCCESS,\r\n  QUESTION_CREATE_FAIL,\r\n  QUESTION_CREATE_RESET,\r\n  QUESTION_LIST_REQUEST,\r\n  QUESTION_LIST_SUCCESS,\r\n  QUESTION_LIST_FAIL,\r\n  QUESTION_REQUEST,\r\n  QUESTION_SUCCESS,\r\n  QUESTION_FAIL\r\n} from \"../constants/QuestionConstants\";\r\n\r\nexport const questionListReducer = (state = {questions: []}, action) => {\r\n  switch (action.type) {\r\n    case QUESTION_LIST_REQUEST:\r\n      return {loading: true, questions: []};\r\n    case QUESTION_LIST_SUCCESS:\r\n      return {loading: false, questions: action.payload};\r\n    case QUESTION_LIST_FAIL:\r\n      return {loading: false, error: action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const questionReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case QUESTION_REQUEST:\r\n      return {loading: true, question: {}};\r\n    case QUESTION_SUCCESS:\r\n      return {loading: false, question: action.payload};\r\n    case QUESTION_FAIL:\r\n      return {loading: false, error: action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const questionCreateReducer = (\r\n  state = {questionCreated: {}},\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case QUESTION_CREATE_REQUEST:\r\n      return {loading: true, questionCreated: {}};\r\n    case QUESTION_CREATE_SUCCESS:\r\n      return {loading: false, questionCreated: action.payload};\r\n    case QUESTION_CREATE_FAIL:\r\n      return {loading: false, error: action.payload};\r\n    case QUESTION_CREATE_RESET:\r\n      return {questionCreated: {}};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}