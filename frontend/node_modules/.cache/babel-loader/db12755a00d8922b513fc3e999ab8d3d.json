{"ast":null,"code":"var _jsxFileName = \"D:\\\\BaiTapTruong\\\\DoAnN\\\\ThiTNOnline\\\\frontend\\\\src\\\\screens\\\\DragAndDrop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DragAndDrop = () => {\n  _s();\n\n  const [dsDapAn, setDsDapAn] = useState([\"A\", \"B\", \"C\", \"D\"]);\n  const [dragValue, setDragValue] = useState({});\n\n  const dragStart = e => {\n    e.target.classList.add(\"dragging\");\n    setDragValue(e);\n    e.dataTransfer.effectAllowed = \"move\";\n    e.dataTransfer.setData(\"drag-item\", e.target.value);\n  };\n\n  const dragEnter = e => {\n    if (!e.target.classList.contains(\"dragging\")) {\n      e.target.classList.add(\"over\");\n    }\n  };\n\n  const dragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = \"move\";\n    return false;\n  };\n\n  const dragLeave = e => {\n    e.stopPropagation();\n    e.target.classList.remove(\"over\");\n  };\n\n  const dragDrop = e => {\n    if (!e.target.classList.contains(\"dragging\")) {\n      const holder = dragValue.target.value;\n      dragValue.target.value = e.target.value;\n      e.target.value = holder;\n      setDragValue(e.target.value);\n    }\n  };\n\n  const dragEnd = e => {\n    e.target.classList.remove(\"dragging\");\n    console.log(e.target);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: dsDapAn.map(dapAn => /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"add-answer-container\",\n      className: \"add-answer-container\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"answer-label\",\n        children: dapAn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Your answer here\",\n        className: \"draggable\",\n        draggable: true,\n        onDragStart: dragStart,\n        onDragEnter: dragEnter,\n        onDragLeave: dragLeave,\n        onDrop: dragDrop,\n        onDragEnd: dragEnd\n      }, dapAn, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DragAndDrop, \"N63vn7gdSx3fxC+r46GT3xkgSlA=\");\n\n_c = DragAndDrop;\nexport default DragAndDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragAndDrop\");","map":{"version":3,"sources":["D:/BaiTapTruong/DoAnN/ThiTNOnline/frontend/src/screens/DragAndDrop.js"],"names":["React","useState","Form","DragAndDrop","dsDapAn","setDsDapAn","dragValue","setDragValue","dragStart","e","target","classList","add","dataTransfer","effectAllowed","setData","value","dragEnter","contains","dragOver","preventDefault","dropEffect","dragLeave","stopPropagation","remove","dragDrop","holder","dragEnd","console","log","map","dapAn"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst DragAndDrop = () => {\r\n  const [dsDapAn, setDsDapAn] = useState([\"A\", \"B\", \"C\", \"D\"]);\r\n  const [dragValue, setDragValue] = useState({});\r\n\r\n  const dragStart = (e) => {\r\n    e.target.classList.add(\"dragging\");\r\n    setDragValue(e);\r\n    e.dataTransfer.effectAllowed = \"move\";\r\n    e.dataTransfer.setData(\"drag-item\", e.target.value);\r\n  };\r\n\r\n  const dragEnter = (e) => {\r\n    if (!e.target.classList.contains(\"dragging\")) {\r\n      e.target.classList.add(\"over\");\r\n    }\r\n  };\r\n\r\n  const dragOver = (e) => {\r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = \"move\";\r\n    return false;\r\n  };\r\n\r\n  const dragLeave = (e) => {\r\n    e.stopPropagation();\r\n    e.target.classList.remove(\"over\");\r\n  };\r\n\r\n  const dragDrop = (e) => {\r\n    if (!e.target.classList.contains(\"dragging\")) {\r\n      const holder = dragValue.target.value;\r\n      dragValue.target.value = e.target.value;\r\n      e.target.value = holder;\r\n      setDragValue(e.target.value);\r\n    }\r\n  };\r\n\r\n  const dragEnd = (e) => {\r\n    e.target.classList.remove(\"dragging\");\r\n    console.log(e.target);\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      {dsDapAn.map((dapAn) => (\r\n        <Form.Group\r\n          controlId=\"add-answer-container\"\r\n          className=\"add-answer-container\"\r\n        >\r\n          <Form.Label className=\"answer-label\">{dapAn}</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Your answer here\"\r\n            className=\"draggable\"\r\n            key={dapAn}\r\n            draggable\r\n            onDragStart={dragStart}\r\n            onDragEnter={dragEnter}\r\n            onDragLeave={dragLeave}\r\n            onDrop={dragDrop}\r\n            onDragEnd={dragEnd}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n      ))}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default DragAndDrop;\r\n"]},"metadata":{},"sourceType":"module"}